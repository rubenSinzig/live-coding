{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hadi/app/fbw48/live-coding/oct/react-native/App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { TouchableWithoutFeedbackBase } from \"react-native-web/dist/index\";\nimport axios from \"axios\";\nimport styles from \"./app/styles/styleSheet\";\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      keyboardStatus = _useState6[0],\n      setKeyboardStatus = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isEnabled = _useState8[0],\n      setIsEnabled = _useState8[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var doSomethings = function doSomethings() {\n    console.log(\"Cool\");\n  };\n\n  useEffect(function () {\n    var showSubscription = Keyboard.addListener(\"keyboardDidShow\", function () {\n      setKeyboardStatus(\"Keyboard Shown\");\n    });\n    var hideSubscription = Keyboard.addListener(\"keyboardDidHide\", function () {\n      setKeyboardStatus(\"Keyboard Hidden\");\n    });\n    return function () {\n      showSubscription.remove();\n      hideSubscription.remove();\n    };\n  }, []);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: require(\"./app/assets/F740BFC0-46E4-4092-8E99-92B52C3A250C_1_105_c.jpeg\"),\n    style: (styles.container, {\n      width: 200,\n      height: 200,\n      borderRadius: 100\n    }, {\n      backgroundColor: \"red\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    numberOfLines: 8,\n    onPress: doSomethings,\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app! Open up App.js to start\", \"\\n\", \"working on your app! Open up App.js to start working on your app! Open\", \"\\n\", \"up App.js to start working on your app! Open up App.js to start working\", \"\\n\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return console.log(\"I am img\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Press here\",\n    onPress: function onPress() {\n      return Alert.alert(\"Your info\", \"Are you sure?\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, keyboardStatus), React.createElement(TextInput, {\n    style: {\n      height: 20\n    },\n    placeholder: \"Enter your name\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    defaultValue: text,\n    onSubmitEditing: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), console.log(text), React.createElement(Switch, {\n    trackColor: {\n      false: \"yellow\",\n      true: \"gray\"\n    },\n    thumbColor: isEnabled ? \"black\" : \"red\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: isEnabled,\n    ios_backgroundColor: \"orange\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/hadi/app/fbw48/live-coding/oct/react-native/App.js"],"names":["StatusBar","React","useState","useEffect","TouchableWithoutFeedbackBase","axios","styles","App","text","setText","users","setUsers","undefined","keyboardStatus","setKeyboardStatus","isEnabled","setIsEnabled","toggleSwitch","previousState","doSomethings","console","log","showSubscription","Keyboard","addListener","hideSubscription","remove","container","require","width","height","borderRadius","backgroundColor","Alert","alert","dismiss","false","true"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  Image,\n  TouchableOpacity,\n  Button,\n  Alert,\n  TextInput,\n  Switch,\n  Keyboard,\n  TouchableWithoutFeedbackBase,\n} from \"react-native\";\nimport axios from \"axios\";\nimport styles from \"./app/styles/styleSheet\";\n//import font from \"./assets/fonts/some.tft\"\nexport default function App() {\n  const [text, setText] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [keyboardStatus, setKeyboardStatus] = useState(undefined);\n\n  const [isEnabled, setIsEnabled] = useState(false);\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState);\n\n  const doSomethings = () => {\n    // somethings\n    console.log(\"Cool\");\n  };\n\n  // useEffect(() => {\n  //   axios\n  //     .get(\"http://localhost:5000/users\")\n  //     .then((res) => setUsers(res.data))\n  //     .catch((err) => console.log(err));\n  // });\n  // useEffect(() => {\n  //   axios\n  //     .post(\"http://localhost:5000/users\",data,{})\n  //     .then((res) => setUsers(res.data))\n  //     .catch((err) => console.log(err));\n  // });\n  useEffect(() => {\n    const showSubscription = Keyboard.addListener(\"keyboardDidShow\", () => {\n      setKeyboardStatus(\"Keyboard Shown\");\n    });\n    const hideSubscription = Keyboard.addListener(\"keyboardDidHide\", () => {\n      setKeyboardStatus(\"Keyboard Hidden\");\n    });\n\n    return () => {\n      showSubscription.remove();\n      hideSubscription.remove();\n    };\n  }, []);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Image\n        source={require(\"./app/assets/F740BFC0-46E4-4092-8E99-92B52C3A250C_1_105_c.jpeg\")}\n        // source={{ uri: \"https://\" }}\n        style={\n          (styles.container,\n          {\n            width: 200,\n            height: 200,\n            borderRadius: 100,\n          },\n          {\n            backgroundColor: \"red\",\n          })\n        }\n      />\n      <Text numberOfLines={8} onPress={doSomethings} style={styles.text}>\n        Open up App.js to start working on your app! Open up App.js to start\n        {\"\\n\"}\n        working on your app! Open up App.js to start working on your app! Open\n        {\"\\n\"}\n        up App.js to start working on your app! Open up App.js to start working\n        {\"\\n\"}\n      </Text>\n      <TouchableOpacity\n        onPress={() => console.log(\"I am img\")}\n      ></TouchableOpacity>\n      <Button\n        title=\"Press here\"\n        // onPress={() => console.log(\"Nice, I am button\")}\n        onPress={() => Alert.alert(\"Your info\", \"Are you sure?\")}\n      />\n      <Text>{keyboardStatus}</Text>\n      <TextInput\n        style={{ height: 20 }}\n        placeholder=\"Enter your name\"\n        onChangeText={(text) => setText(text)}\n        defaultValue={text}\n        onSubmitEditing={Keyboard.dismiss}\n      />\n      {console.log(text)}\n      <Switch\n        // false not for ios\n        trackColor={{ false: \"yellow\", true: \"gray\" }}\n        thumbColor={isEnabled ? \"black\" : \"red\"}\n        ios_backgroundColor=\"#3e3e3e\"\n        onValueChange={toggleSwitch}\n        value={isEnabled}\n        ios_backgroundColor=\"orange\"\n      />\n      <StatusBar style=\"auto\" />\n    </SafeAreaView>\n  );\n}\n\n// import React from \"react\";\n// import {\n//   Button,\n//   Platform,\n//   Text,\n//   Vibration,\n//   View,\n//   SafeAreaView,\n//   StyleSheet,\n// } from \"react-native\";\n\n// const Separator = () => {\n//   return <View style={Platform.OS === \"android\" ? styles.separator : null} />;\n// };\n\n// const App = () => {\n//   const ONE_SECOND_IN_MS = 1000;\n\n//   const PATTERN = [\n//     1 * ONE_SECOND_IN_MS,\n//     2 * ONE_SECOND_IN_MS,\n//     3 * ONE_SECOND_IN_MS,\n//   ];\n\n//   const PATTERN_DESC =\n//     Platform.OS === \"android\"\n//       ? \"wait 1s, vibrate 2s, wait 3s\"\n//       : \"wait 1s, vibrate, wait 2s, vibrate, wait 3s\";\n\n//   return (\n//     <SafeAreaView style={(styles.container, { backgroundColor: \"blue\" })}>\n//       <Text style={[styles.header, styles.paragraph]}>Vibration API</Text>\n//       <View>\n//         <Button title=\"Vibrate once\" onPress={() => Vibration.vibrate()} />\n//       </View>\n//       <Separator />\n//       {Platform.OS == \"android\"\n//         ? [\n//             <View>\n//               <Button\n//                 title=\"Vibrate for 10 seconds\"\n//                 onPress={() => Vibration.vibrate(10 * ONE_SECOND_IN_MS)}\n//               />\n//             </View>,\n//             <Separator />,\n//           ]\n//         : null}\n//       <Text style={styles.paragraph}>Pattern: {PATTERN_DESC}</Text>\n//       <Button\n//         title=\"Vibrate with pattern\"\n//         onPress={() => Vibration.vibrate(PATTERN)}\n//       />\n//       <Separator />\n//       <Button\n//         title=\"Vibrate with pattern until cancelled\"\n//         onPress={() => Vibration.vibrate(PATTERN, true)}\n//       />\n//       <Separator />\n//       <Button\n//         title=\"Stop vibration pattern\"\n//         onPress={() => Vibration.cancel()}\n//         color=\"#FF0000\"\n//       />\n//     </SafeAreaView>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     paddingTop: 44,\n//     padding: 8,\n//   },\n//   header: {\n//     fontSize: 18,\n//     fontWeight: \"bold\",\n//     textAlign: \"center\",\n//   },\n//   paragraph: {\n//     margin: 24,\n//     textAlign: \"center\",\n//   },\n\n//   separator: {\n//     marginVertical: 8,\n//     borderBottomColor: \"#737373\",\n//     borderBottomWidth: StyleSheet.hairlineWidth,\n//   },\n// });\n\n// export default App;\n\n// import React from \"react\";\n// import { StyleSheet, Text, View, SafeAreaView } from \"react-native\";\n// // npm i react\n// // npm i react-router-native\n// import { NativeRouter, Route, Link } from \"react-router-native\";\n// import Home from \"./app/screens/Home\";\n// import About from \"./app/screens/About\";\n// import More from \"./app/screens/More\";\n\n// const App = () => (\n//   <NativeRouter>\n//     <SafeAreaView style={styles.nav}>\n//       <Link to=\"/about\" underlayColor=\"orange\" style={styles.navItem}>\n//         <Text>About</Text>\n//       </Link>\n//       <Link to=\"/more\" underlayColor=\"orange\" style={styles.navItem}>\n//         <Text>More</Text>\n//       </Link>\n//     </SafeAreaView>\n//     <Route exact path=\"/\" component={Home} />\n//     <Route path=\"/about\" component={About} />\n//     <Route path=\"/more\" component={More} />\n//   </NativeRouter>\n// );\n\n// const styles = StyleSheet.create({\n//   nav: {\n//     flexDirection: \"row\",\n//     zIndex: 1,\n//     justifyContent: \"space-around\",\n//     backgroundColor: \"#4444\",\n//   },\n//   navItem: {\n//     flex: 1,\n//     alignItems: \"center\",\n//     padding: 10,\n//     backgroundColor: \"#4444\",\n//   },\n// });\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}